<?php/** * Created by PhpStorm. * User: Administrator * Date: 2018/5/8 * Time: 16:33 */class Qrcode{    public static  $instance;    public static  function Instance(){        if(!self::$instance) {            self::$instance = new self();        }        return self::$instance;    }    /**     * 生成太阳码     * @param array $params [scene]     * @return mixed     * @throws     */    public function getwxacodeunlimit($params = [])    {        global $_W, $_GPC;        $url = "https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=" . $this->getToken();        //$url  = "https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=" .$token;            $params = [            'scene' => 'id='.isset($params['scene']) ? $params['scene'] : "123",            'page' => isset($params['page']) ? $params['page'] : "",            'width' => 200,            'auto_color' => false,            'line_color' => [                'r' => 0,                'g' => 0,                'b' => 0,            ]        ];        $params = json_encode($params);        $image = $this->makeRequest($url, $params);        if ($image['errono'] == '0') {            //        $image =  $this->curl1($url,$params,$method = 'POST', $header = array(), $multi = true);            $image_path = 'images/' . $_W['uniacid'] . '/market/qrcode/' . date('Y-m-d') . '/';            if (!is_dir($image_path)) {                $image_path = 'images/' . $_W['uniacid'] . '/market/qrcode/' . date('Y-m-d') . '/';                $re = @mkdir(ATTACHMENT_ROOT . $image_path, '0755', true);            }//判断目录存在否，存在不创建     echo "目录'" . $path . "'已经存在";  //已经存在则输入路径   }            $filename = $_SERVER['REQUEST_TIME'] . '.jpg';//      header('Content-type: image/jpg');            //echo $image;die;            $result = file_put_contents(ATTACHMENT_ROOT . $image_path . $filename, $image['data']);            //var_dump($image_path.$filename);die;            load()->func('file');            @file_remote_upload($image_path.$filename);            $re=['all'=>tomedia($image_path.$filename),'short'=>($image_path.$filename)];            return $re;        }        return '';    }    public function makeRequest($url, $data = '')    {        $headers = array("Content-type: application/json;charset=UTF-8", "Accept: application/json", "Cache-Control: no-cache", "Pragma: no-cache");        //创建curl 获取模版消息基本内容        $curl = curl_init();        curl_setopt($curl, CURLOPT_URL, $url);        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);        if (!empty($data)) {            curl_setopt($curl, CURLOPT_POST, 1);            curl_setopt($curl, CURLOPT_POSTFIELDS, $data);        }        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);        $output = curl_exec($curl);        if (curl_errno($curl)) {            $datas['errono'] = '500';            $datas['message'] = '请求出错';            $datas['data'] = 'error_num:' . curl_errno($curl);            return $datas;        }        $code = json_decode($output, true);        if ($code['errcode'] != 0) {            $datas['errono'] = '505';            $datas['message'] = '请求出错';            $datas['data'] = 'error_code:' . $code['errcode'] . '  ;      ' . 'error_msg:' . $code['errmsg'];            return $datas;        }        $datas['errono'] = '0';        $datas['message'] = '获取成功！' . $code;        $datas['data'] = $output;        curl_close($curl);        return $datas;//返回回传的值    }    /**     * @param  string $url 请求URL     * @param  array $params 请求参数     * @param  string $method 请求方法GET/POST     * @return array  $data   响应数据     * $httpstr = http($url, $data, 'POST', array("Content-type: text/html; charset=utf-8"));     */    public function curl1($url, $params, $method = 'GET', $header = array(), $multi = false)    {        $opts = array(            CURLOPT_TIMEOUT => 30,            CURLOPT_RETURNTRANSFER => 1,            CURLOPT_SSL_VERIFYPEER => false,            CURLOPT_SSL_VERIFYHOST => false,            CURLOPT_HTTPHEADER => $header        );        /* 根据请求类型设置特定参数 */        switch (strtoupper($method)) {            case 'GET':                $opts[CURLOPT_URL] = $url . '?' . http_build_query($params);                break;            case 'POST':                //判断是否传输文件                $params = $multi ? $params : http_build_query($params);                $opts[CURLOPT_URL] = $url;                $opts[CURLOPT_POST] = 1;                $opts[CURLOPT_POSTFIELDS] = $params;                break;            default:                return '';        }        /* 初始化并执行curl请求 */        $ch = curl_init();        curl_setopt_array($ch, $opts);        $data = curl_exec($ch);        $error = curl_error($ch);        curl_close($ch);        if ($error) return '';        return $data;    }    /**     * 获取token     * @return mixed     * @throws     */    private function getToken()    {        global $_W, $_GPC;        $url = 'https://api.weixin.qq.com/cgi-bin/token';        $query = [            'grant_type' => "client_credential",            'appid' => $_W['uniaccount']['key'],            'secret' => $_W['uniaccount']['secret'],        ];        $result = json_decode($this->curl1($url, $query), 1);        if (isset($result['access_token'])) {            $access_token = $result['access_token'];        }        //var_dump($result);exit;        return $access_token;    }}